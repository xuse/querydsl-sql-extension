package com.github.xuse.querydsl.sql.column;

import java.lang.annotation.Annotation;
import com.github.xuse.querydsl.annotation.AutoGenerated;
import com.github.xuse.querydsl.util.ArrayUtils;
import com.querydsl.core.types.Path;
import com.querydsl.sql.types.Type;

/**
 * 描述一个数据库列 映射到java字段上的模型信息。
 * @see PathMapping
 */
public interface ColumnMapping extends ColumnMetadataEx {

	Path<?> getPath();

	/**
	 *  得到默认未设置或修饰过的值
	 *  @param value value
	 *  @return if the value is unsaved.
	 */
	boolean isUnsavedValue(Object value);

	/**
	 *   是否为自动生成数值
	 *   @return AutoGenerated
	 */
	AutoGenerated getGenerated();

	/**
	 *   该字段不参与插入
	 *
	 *   @return if it is notInsert
	 */
	boolean isNotInsert();

	/**
	 *   该字段不参与更新
	 *
	 *   @return if it isNotUpdate
	 */
	boolean isNotUpdate();

	/**
	 *   java字段名
	 *
	 *   @return java字段名
	 */
	String fieldName();

	/**
	 *   获得Java字段的类型
	 *   @return field type
	 */
	Class<?> getType();

	/**
	 * 获得添加在字段上的注解
	 * @param <T> The type of target object.
	 * @param clz clz
	 * @return annotations
	 */
	<T extends Annotation> T getAnnotation(Class<T> clz);

	/**
	 *   返回自定义映射类型
	 *   @return CustomType def.
	 */
	Type<?> getCustomType();

	/**
	 *   设置自定义映射
	 *   @param t 自定义映射
	 */
	void setCustomType(Type<?> t);

	/**
	 *  数据回写
	 *  @param value value
	 *  @param bean bean
	 */
	void writeback(Object bean, Object value);
	
	boolean isAutoIncreament();
}
