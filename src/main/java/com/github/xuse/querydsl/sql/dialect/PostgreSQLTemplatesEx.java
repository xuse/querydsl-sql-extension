package com.github.xuse.querydsl.sql.dialect;

import com.github.xuse.querydsl.sql.ddl.DDLOps;
import com.querydsl.core.types.SQLTemplatesEx;
import com.querydsl.sql.SQLTemplates;
import com.querydsl.sql.TemplatesAccessor;

public class PostgreSQLTemplatesEx extends DefaultSQLTemplatesEx{

	public PostgreSQLTemplatesEx(SQLTemplates template) {
		super(template);
	}
	
	
//	typeNames.put(Types.BLOB, "bytea", Types.VARBINARY);
//	typeNames.put(Types.CLOB, "text", 0);
//	typeNames.put(Types.BOOLEAN, "boolean", 0,"bool");
//	typeNames.put(Types.TINYINT, "int2", 0);
//	typeNames.put(Types.SMALLINT, "int2", 0);
//	typeNames.put(Types.INTEGER, "int4", 0);
//	typeNames.put(Types.BIGINT, "int8", 0);
//	
//	typeNames.put(Types.FLOAT, 6, "float4", 0);
//	typeNames.put(Types.FLOAT, 15,"float8", Types.DOUBLE);
//	typeNames.put(Types.FLOAT, 38,"numeric($p, $s)", Types.NUMERIC);
//	typeNames.put(Types.DOUBLE, 15,"float8", 0);
//	typeNames.put(Types.DOUBLE, 38,"numeric($p, $s)", Types.NUMERIC);
//	typeNames.put(Types.NUMERIC, "numeric($p, $s)", 0);

	@Override
	public void init(SQLTemplates templates) {
		SQLTemplatesEx.initDefaultDDLTemplate(templates);
		
		TemplatesAccessor.setAutoIncrement(templates, " generated by default as identity");
		
		add(templates, DDLOps.COLUMN_ALLOW_NULL, "");
		add(templates, DDLOps.CHARSET, "{0}");
		add(templates, DDLOps.COLLATE, "{0}");
		add(templates, DDLOps.UNSIGNED, "{0}");
		add(templates, DDLOps.COMMENT_ON_COLUMN, "COMMENT ON COLUMN {0} IS {1}");
		add(templates, DDLOps.COMMENT_ON_TABLE, "COMMENT ON TABLE {0} IS {1}");
		//add(templates, Basic.SELECT_VALUES, "values {0}");
		//add(templates, ConstraintType.UNIQUE, "CONSTRAINT {1} UNIQUE {2}");
//		add(templates, SpecialFeature.ONE_COLUMN_IN_SINGLE_DDL, "");
		addUnsupports(DDLOps.UNSIGNED);
//				AlterTableOps.CHANGE_COLUMN,DDLOps.COLLATE, AlterTableConstraintOps.ALTER_TABLE_DROP_BITMAP,
//				AlterTableConstraintOps.ALTER_TABLE_DROP_KEY
		
	}
	
	
	
	
	
}
