package com.github.xuse.querydsl.entity;

import java.sql.Types;
import java.util.Date;
import java.util.Map;

import com.github.xuse.querydsl.annotation.AutoGenerated;
import com.github.xuse.querydsl.annotation.CustomType;
import com.github.xuse.querydsl.annotation.GeneratedType;
import com.github.xuse.querydsl.annotation.dbdef.ColumnSpec;
import com.github.xuse.querydsl.annotation.dbdef.Comment;
import com.github.xuse.querydsl.annotation.dbdef.Key;
import com.github.xuse.querydsl.annotation.dbdef.TableSpec;
import com.github.xuse.querydsl.enums.Gender;
import com.github.xuse.querydsl.types.JSONObjectType;
import com.querydsl.core.types.ConstraintType;

import lombok.Data;

@Data
@TableSpec(name="ca_asset",primaryKeys="id",collate = "utf8mb4_general_ci",
keys = {
		@Key(path= {"code"},type=ConstraintType.UNIQUE),
		@Key(path= {"content"},type=ConstraintType.FULLTEXT),
	}
)
@Comment("Test table for assets.")
public class CaAsset {
	
	@ColumnSpec(autoIncrement = true,type = Types.INTEGER,unsigned = true,nullable = false)
	@Comment("primary keyï¼Œauto increment.")
	private int id;
	
	@ColumnSpec(type = Types.VARCHAR,size=64,nullable = false,defaultValue = "''")
	@Comment("The code of asset. unique.")
	private String code;
	
	@ColumnSpec(name="asset_name",size=128,nullable = false)
	@Comment("The name of the asset.")
	private String name;
	
	@ColumnSpec(size=16384)
	@Comment("Asset's comments.")
	private String content;
	
	@ColumnSpec()
	@AutoGenerated(GeneratedType.CREATED_TIMESTAMP)
	@Comment("create time of the record.")
	private Date created;
	
	@ColumnSpec()
	@AutoGenerated(GeneratedType.UPDATED_TIMESTAMP)
	@Comment("update time of the record.")
	private Date updated;
	
	@ColumnSpec(type=Types.VARCHAR,size=16)
	@Comment("Another extension info.")
	private Gender gender;
	
	@ColumnSpec(type=Types.VARCHAR,size=256)
	@CustomType(JSONObjectType.class)
	@Comment("extension info.")
	private Aaa ext;
	
	@CustomType(JSONObjectType.class)
	@ColumnSpec(type=Types.VARCHAR,size=256)
	@Comment("Some custom attributes.")
	private Map<String,String> map;

}
